--Merging one single table

CREATE TABLE casestudy1-427511.Cyclistic_datas.cyclistic_all_year_data AS 
(SELECT * FROM casestudy1-427511.Cyclistic_datas.Jan
UNION ALL
SELECT * FROM casestudy1-427511.Cyclistic_datas.Feb
UNION ALL
SELECT * FROM casestudy1-427511.Cyclistic_datas.Mar
UNION ALL
SELECT * FROM casestudy1-427511.Cyclistic_datas.Apr
UNION ALL
SELECT * FROM casestudy1-427511.Cyclistic_datas.May
UNION ALL
SELECT * FROM casestudy1-427511.Cyclistic_datas.Jun
UNION ALL
SELECT * FROM casestudy1-427511.Cyclistic_datas.Jul
UNION ALL
SELECT * FROM casestudy1-427511.Cyclistic_datas.Aug
UNION ALL
SELECT * FROM casestudy1-427511.Cyclistic_datas.Sep
UNION ALL
SELECT * FROM casestudy1-427511.Cyclistic_datas.Oct
UNION ALL
SELECT * FROM casestudy1-427511.Cyclistic_datas.Nov
UNION ALL
SELECT * FROM casestudy1-427511.Cyclistic_datas.Dec
);






--Controlling is there any null value in ride_id 


SELECT COUNTIF(ride_id is NULL) AS counting_null FROM
casestudy1-427511.Cyclistic_datas.cyclistic_all_year_data;


--Controlling duplicates value in ride_id

SELECT COUNT(ride_id) - COUNT(DISTINCT(ride_id)) AS duplicate_control 
FROM casestudy1-427511.Cyclistic_datas.cyclistic_all_year_data;


--Controlling values

SELECT LENGTH(ride_id) AS ride_id_length, COUNT(ride_id) AS number_of_rows
FROM casestudy1-427511.Cyclistic_datas.cyclistic_all_year_data
GROUP BY ride_id_length;


--Most used type of bike

SELECT DISTINCT rideable_type, COUNT(rideable_type) AS total_trips
FROM casestudy1-427511.Cyclistic_datas.cyclistic_all_year_data
GROUP BY rideable_type;

--Adding day_of_week column

ALTER TABLE casestudy1-427511.Cyclistic_datas.cyclistic_all_year_data
ADD COLUMN day_of_week INT64;

UPDATE casestudy1-427511.Cyclistic_datas.cyclistic_all_year_data 
SET day_of_week = EXTRACT(DAYOFWEEK FROM started_at)
WHERE day_of_week IS NULL

--Adding month column

ALTER TABLE casestudy1-427511.Cyclistic_datas.cyclistic_all_year_data
ADD COLUMN month INT64;

UPDATE casestudy1-427511.Cyclistic_datas.cyclistic_all_year_data 
SET month = EXTRACT(MONTH FROM started_at)
WHERE month IS NULL


--Adding ride_length_minute

ALTER TABLE casestudy1-427511.Cyclistic_datas.cyclistic_all_year_data
ADD COLUMN ride_length_minute FLOAT64;

UPDATE casestudy1-427511.Cyclistic_datas.cyclistic_all_year_data 
SET ride_length_minute = ROUND(TIMESTAMP_DIFF(ended_at, started_at, second)/60,1)
WHERE ride_length_minute IS NULL

--Testing ride_length_minute

SELECT MIN(ride_length_minute),MAX(ride_length_minute)
FROM  casestudy1-427511.Cyclistic_datas.cyclistic_all_year_data

-- There is negative value and max value can't be more than 1440 minutes(24h)
--So I filtered to exclude negative numbers and values greater than 1440 minutes.

SELECT AVG(ride_length_minute),MAX(ride_length_minute),MIN(ride_length_minute)
FROM casestudy1-427511.Cyclistic_datas.cyclistic_all_year_data
WHERE ride_length_minute > 0 AND ride_length_minute < 1440


--Average ride lengths for rider types.

-For member

SELECT AVG(ride_length_minute)
FROM casestudy1-427511.Cyclistic_datas.cyclistic_all_year_data
WHERE ride_length_minute > 0 AND ride_length_minute < 1440 AND member_casual ='member'

-For casual

SELECT AVG(ride_length_minute)
FROM casestudy1-427511.Cyclistic_datas.cyclistic_all_year_data
WHERE ride_length_minute > 0 AND ride_length_minute < 1440 AND member_casual ='member'

--Average ride lenghths for each day_of_week for rider types.

--For member

SELECT day_of_week,AVG(ride_length_minute)
FROM casestudy1-427511.Cyclistic_datas.cyclistic_all_year_data
WHERE ride_length_minute > 0 AND ride_length_minute < 1440 AND member_casual = 'member'
GROUP BY day_of_week
ORDER BY day_of_week

--For casual

SELECT day_of_week,AVG(ride_length_minute)
FROM casestudy1-427511.Cyclistic_datas.cyclistic_all_year_data
WHERE ride_length_minute > 0 AND ride_length_minute < 1440 AND member_casual = 'casual'
GROUP BY day_of_week
ORDER BY day_of_week

--Average ride lengths for each month for rider types.

--For member

SELECT month,AVG(ride_length_minute)
FROM casestudy1-427511.Cyclistic_datas.cyclistic_all_year_data
WHERE ride_length_minute > 0 AND ride_length_minute < 1440 AND member_casual = 'member'
GROUP BY month
ORDER BY month


--For Casual

SELECT month,AVG(ride_length_minute)
FROM casestudy1-427511.Cyclistic_datas.cyclistic_all_year_data
WHERE ride_length_minute > 0 AND ride_length_minute < 1440 AND member_casual = 'casual'
GROUP BY month
ORDER BY month


--Number of rides on each day of week for member

SELECT 
 CASE
  WHEN day_of_week = 1 THEN 'Sunday'
  WHEN day_of_week = 2 THEN 'Monday'
  WHEN day_of_week = 3 THEN 'Tuesday'
  WHEN day_of_week = 4 THEN 'Wednesday'
  WHEN day_of_week = 5 THEN 'Thursday'
  WHEN day_of_week = 6 THEN 'Friday'
  WHEN day_of_week = 7 THEN 'Saturday' END,COUNT(*)
FROM casestudy1-427511.Cyclistic_datas.cyclistic_all_year_data
WHERE ride_length_minute > 0 AND ride_length_minute < 1440 AND member_casual = 'member'
GROUP BY day_of_week
ORDER BY day_of_week

--Number of rides on each day of week for casual

SELECT 
 CASE
  WHEN day_of_week = 1 THEN 'Sunday'
  WHEN day_of_week = 2 THEN 'Monday'
  WHEN day_of_week = 3 THEN 'Tuesday'
  WHEN day_of_week = 4 THEN 'Wednesday'
  WHEN day_of_week = 5 THEN 'Thursday'
  WHEN day_of_week = 6 THEN 'Friday'
  WHEN day_of_week = 7 THEN 'Saturday' END,COUNT(*)
FROM casestudy1-427511.Cyclistic_datas.cyclistic_all_year_data
WHERE ride_length_minute > 0 AND ride_length_minute < 1440 AND member_casual = 'member'
GROUP BY day_of_week
ORDER BY day_of_week

--Number of rides on each month for member

SELECT day_of_week,COUNT(*) 
FROM casestudy1-427511.Cyclistic_datas.cyclistic_all_year_data
WHERE ride_length_minute > 0 AND ride_length_minute < 1440 AND member_casual ='casual'
GROUP BY day_of_week
ORDER BY day_of_week

--Number of rides on each month for casual


SELECT month,COUNT(*) 
FROM casestudy1-427511.Cyclistic_datas.cyclistic_all_year_data
WHERE ride_length_minute > 0 AND ride_length_minute < 1440 AND member_casual ='casual'
GROUP BY month
ORDER BY month


--I looked into which type of bicycle is preferred


--For member

SELECT rideable_type,COUNT(*)
FROM casestudy1-427511.Cyclistic_datas.cyclistic_all_year_data
WHERE ride_length_minute > 0 AND ride_length_minute < 1440 AND member_casual = 'member'
GROUP BY rideable_type

--For casual

SELECT rideable_type,COUNT(*)
FROM casestudy1-427511.Cyclistic_datas.cyclistic_all_year_data
WHERE ride_length_minute > 0 AND ride_length_minute < 1440 AND member_casual = 'casual'
GROUP BY rideable_type


--Finding most popular start station and end station for rider type

--Start station for member

SELECT start_station_name,COUNT(*)
FROM casestudy1-427511.Cyclistic_datas.cyclistic_all_year_data
WHERE ride_length_minute > 0 AND ride_length_minute < 1440 AND member_casual = 'member' AND start_station_name IS NOT NULL
GROUP BY start_station_name
ORDER BY COUNT(*) DESC

--Start station for casual

SELECT start_station_name,COUNT(*)
FROM casestudy1-427511.Cyclistic_datas.cyclistic_all_year_data
WHERE ride_length_minute > 0 AND ride_length_minute < 1440 AND member_casual = 'member' AND start_station_name IS NOT NULL
GROUP BY start_station_name
ORDER BY COUNT(*) DESC

--End station for member

SELECT end_station_name,COUNT(*)
FROM casestudy1-427511.Cyclistic_datas.cyclistic_all_year_data
WHERE ride_length_minute > 0 AND ride_length_minute < 1440 AND member_casual = 'member' AND end_station_name IS NOT NULL
GROUP BY end_station_name
ORDER BY COUNT(*) DESC

--End station for casual

SELECT end_station_name,COUNT(*)
FROM casestudy1-427511.Cyclistic_datas.cyclistic_all_year_data
WHERE ride_length_minute > 0 AND ride_length_minute < 1440 AND member_casual = 'member' AND end_station_name IS NOT NULL
GROUP BY end_station_name
ORDER BY COUNT(*) DESC
